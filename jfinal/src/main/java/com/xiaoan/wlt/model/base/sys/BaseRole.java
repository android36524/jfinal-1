package com.xiaoan.wlt.model.base.sys;

import com.xiaoan.wlt.common.jfinal.BaseModel;
import com.jfinal.plugin.activerecord.IBean;

import org.apache.commons.lang3.StringUtils;

import com.xiaoan.wlt.common.WhereAndParas;

import java.util.ArrayList;

import java.util.List;

/**
 * Generated by JFinal, do not modify this file.
 */
@SuppressWarnings("serial")
public abstract class BaseRole<M extends BaseRole<M>> extends BaseModel<M> implements IBean {

	public void setId(java.lang.Long id) {
		set("id", id);
	}

	public java.lang.Long getId() {
		return get("id");
	}

	public void setCreateTime(java.util.Date createTime) {
		set("createTime", createTime);
	}

	public java.util.Date getCreateTime() {
		return get("createTime");
	}

	public void setUpdateTime(java.util.Date updateTime) {
		set("updateTime", updateTime);
	}

	public java.util.Date getUpdateTime() {
		return get("updateTime");
	}

	public void setVersion(java.lang.Integer version) {
		set("version", version);
	}

	public java.lang.Integer getVersion() {
		return get("version");
	}

	public void setRemark(java.lang.String remark) {
		set("remark", remark);
	}

	public java.lang.String getRemark() {
		return get("remark");
	}

	public void setRoleName(java.lang.String roleName) {
		set("roleName", roleName);
	}

	public java.lang.String getRoleName() {
		return get("roleName");
	}

	public void setState(java.lang.String state) {
		set("state", state);
	}

	public java.lang.String getState() {
		return get("state");
	}

	public static final String TABLE = " sys_role ";
	public WhereAndParas getWhereAndParas(BaseRole role){
		StringBuffer sql = new StringBuffer();
		List<Object> list = new ArrayList<Object>();
		WhereAndParas wap = new WhereAndParas();
		if(role.getId() != null && role.getId() > 0){
			sql.append(" and o.id = ?");
			list.add(role.getId());
		}
		if(role.getVersion() != null && role.getVersion() > 0){
			sql.append(" and o.version = ?");
			list.add(role.getVersion());
		}
		if(StringUtils.isNotEmpty(role.getRemark())){
			sql.append(" and o.remark like ?");
			list.add("%"+role.getRemark()+"%");
		}
		if(StringUtils.isNotEmpty(role.getRoleName())){
			sql.append(" and o.roleName like ?");
			list.add("%"+role.getRoleName()+"%");
		}
		if(StringUtils.isNotEmpty(role.getState())){
			sql.append(" and o.state like ?");
			list.add("%"+role.getState()+"%");
		}
		wap.setWhere(sql.toString());
		wap.setParas(list.toArray());
		return wap;
	}
}
