package com.xiaoan.wlt.model.erp.jxc;

import java.util.List;

import org.apache.commons.lang3.math.NumberUtils;

import com.jfinal.plugin.activerecord.Page;
import com.xiaoan.wlt.common.WhereAndParas;
import com.xiaoan.wlt.model.base.erp.jxc.BaseOut;
import com.xiaoan.wlt.shiro.UserContext;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Out extends BaseOut<Out> {
	public static final Out dao = new Out();
	private int pageNumber = 1;
	private int pageSize = 15;
	public int getPageSize() {return pageSize;}
	public void setPageSize(int pageSize) {this.pageSize = pageSize;}
	public int getPageNumber() {return pageNumber;}
	public void setPageNumber(int pageNumber) {this.pageNumber = pageNumber;}
	public Page<Out> findPageList(Out out) {
		WhereAndParas wp = getWhereAndParas(out);
		return dao.paginate(out.getPageNumber(),out.getPageSize(),"select * ","from"+ Out.TABLE + "o where 1=1 " +wp.getWhere(),wp.getParas());
	}
	public static final String TABLE = " erp_jxc_out ";
	private String cName;
	public String getcName() {
		return cName;
	}
	public void setcName(String cName) {
		this.cName = cName;
	}
	
	public Page<Out> findPageList2(Out out) {
		WhereAndParas wp = getWhereAndParas(out);
		String select = "select o.*,c.name as cName ";
		String form = "from"+ Out.TABLE + " o left join erp_jxc_customer c on c.id = o.c_id where 1=1 " +wp.getWhere();
		return dao.paginate(out.getPageNumber(),out.getPageSize(),select,form,wp.getParas());
	}
	
	public Out findInfoById(String id) {
		String sql = "SELECT o.*,d.name as dname,s.name as sname "
				+ "FROM erp_jxc_out o "
				+ "LEFT JOIN erp_jxc_depot d ON o.depot_id = d.id "
				+ "LEFT JOIN erp_jxc_customer s ON o.c_id = s.id "
				+ "WHERE o.id = ?";
		return dao.findFirst(sql,id);
	}
	
	/**
	 * 作废一个出货单，并修改库存
	 * @param id
	 */
	public void cancelById(String id){
		if(!NumberUtils.isNumber(id)) throw new RuntimeException("无效id");
		Out out = dao.findById(id);
		Stock.dao.cancelByInto(out);
	}
	
	/**
	 * 出货价最高的商品
	 * @return
	 */
	private static String findMaxPriceProduct = "SELECT p.name as pName,l.price_out FROM erp_jxc_out o "
			+ "LEFT JOIN erp_jxc_out_list l ON o.id = l.out_id "
			+ "LEFT JOIN erp_jxc_product p ON l.product_id = p.id "
			+ "WHERE o.state = 'OUT' AND o.s_id = ? "
			+ "ORDER BY l.price_out DESC";
	public Out findMaxPriceProduct() {
		return dao.findFirst(findMaxPriceProduct,UserContext.getShopsInfo());
	}
	/**
	 * 出货最多的商品
	 */
	private static String findTotalNumPrice = "SELECT COUNT(o.id) AS num,SUM(o.price_total) AS price FROM erp_jxc_out o "
			+ " WHERE o.state = 'OUT' AND o.s_id = ? ";
	public Out findTotalNumPrice() {
		return dao.findFirst(findTotalNumPrice,UserContext.getShopsInfo());
	}
	private static String findMostProduct = "SELECT p.name AS pName FROM erp_jxc_out o "
			+ "LEFT JOIN erp_jxc_out_list l ON o.id = l.out_id "
			+ "LEFT JOIN erp_jxc_product p ON l.product_id = p.id "
			+ "WHERE o.state = 'OUT' AND o.s_id = ? "
			+ "GROUP BY l.product_id "
			+ "ORDER BY SUM(l.num) DESC ";
	public Out findMostProduct() {
		return dao.findFirst(findMostProduct,UserContext.getShopsInfo());
	}
	private static String findByOutTimeGroup = "SELECT o.out_time as time,COUNT(o.id) as num,"
			+ "SUM(o.price_total) as price "
			+ "FROM erp_jxc_out o "
			+ "where o.state = 'OUT' AND o.s_id = ? "
			+ "GROUP BY date_format(o.out_time, '%Y%m%d') "
			+ "ORDER BY o.out_time DESC "
			+ "LIMIT 15 ";
	public List<Out> findByOutTimeGroup() {
		return dao.find(findByOutTimeGroup,UserContext.getShopsInfo());
	}
	private static String findTotalCustomerPrice = "SELECT SUM(l.price_total) AS total,s.name AS sName FROM erp_jxc_out o "
			+ "LEFT JOIN erp_jxc_out_list l ON o.id = l.out_id "
			+ "LEFT JOIN erp_jxc_customer s ON o.c_id = s.id "
			+ "WHERE o.state = 'OUT' AND o.s_id = ? "
			+ "GROUP BY o.c_id "
			+ "ORDER BY SUM(l.price_total) DESC";
	public Out findTotalCustomerPrice() {
		return dao.findFirst(findTotalCustomerPrice,UserContext.getShopsInfo());
	}
}