package com.xiaoan.wlt.model.t;

import org.apache.commons.lang3.StringUtils;

import com.xiaoan.wlt.common.WhereAndParas;

import java.util.ArrayList;

import java.util.List;

import com.jfinal.plugin.activerecord.Page;

import com.xiaoan.wlt.model.base.t.BaseAnasGoal;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class AnasGoal extends BaseAnasGoal<AnasGoal> {
	public static final AnasGoal dao = new AnasGoal();
	private int pageNumber = 1;
	private int pageSize = 15;
	public int getPageSize() {return pageSize;}
	public void setPageSize(int pageSize) {this.pageSize = pageSize;}
	public int getPageNumber() {return pageNumber;}
	public void setPageNumber(int pageNumber) {this.pageNumber = pageNumber;}
	public Page<AnasGoal> findPageList(AnasGoal anasGoal) {
		WhereAndParas wp = getWhereAndParas(anasGoal);
		return dao.paginate(anasGoal.getPageNumber(),anasGoal.getPageSize(),"select * ","from"+ AnasGoal.TABLE + "where 1=1 " +wp.getWhere(),wp.getParas());
	}
	public static final String TABLE = " t_anas_goal ";
	public WhereAndParas getWhereAndParas(AnasGoal anasGoal){
		StringBuffer sql = new StringBuffer();
		List<Object> list = new ArrayList<Object>();
		WhereAndParas wap = new WhereAndParas();
		if(anasGoal.getId() != null && anasGoal.getId() > 0){
			sql.append(" and id = ?");
			list.add(anasGoal.getId());
		}
		if(anasGoal.getVersion() != null && anasGoal.getVersion() > 0){
			sql.append(" and version = ?");
			list.add(anasGoal.getVersion());
		}
		if(StringUtils.isNotEmpty(anasGoal.getConcrete())){
			sql.append(" and concrete like ?");
			list.add("%"+anasGoal.getConcrete()+"%");
		}
		if(anasGoal.getFinish() != null && anasGoal.getFinish() > 0){
			sql.append(" and finish = ?");
			list.add(anasGoal.getFinish());
		}
		if(StringUtils.isNotEmpty(anasGoal.getGoalCycle())){
			sql.append(" and goalCycle like ?");
			list.add("%"+anasGoal.getGoalCycle()+"%");
		}
		if(StringUtils.isNotEmpty(anasGoal.getGoalState())){
			sql.append(" and goalState like ?");
			list.add("%"+anasGoal.getGoalState()+"%");
		}
		if(StringUtils.isNotEmpty(anasGoal.getGoalType())){
			sql.append(" and goalType like ?");
			list.add("%"+anasGoal.getGoalType()+"%");
		}
		if(anasGoal.getNum() != null && anasGoal.getNum() > 0){
			sql.append(" and num = ?");
			list.add(anasGoal.getNum());
		}
		if(anasGoal.getCreateUser() != null && anasGoal.getCreateUser() > 0){
			sql.append(" and createUser = ?");
			list.add(anasGoal.getCreateUser());
		}
		if(anasGoal.getWeek() != null && anasGoal.getWeek() > 0){
			sql.append(" and week = ?");
			list.add(anasGoal.getWeek());
		}
		wap.setWhere(sql.toString());
		wap.setParas(list.toArray());
		return wap;
	}
}
