package com.xiaoan.wlt.model.sys;

import org.apache.commons.lang3.StringUtils;

import com.xiaoan.wlt.common.WhereAndParas;

import java.util.ArrayList;

import java.util.List;

import com.jfinal.plugin.activerecord.Page;

import com.xiaoan.wlt.model.base.sys.BaseLog;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Log extends BaseLog<Log> {
	public static final Log dao = new Log();
	private int pageNumber = 1;
	private int pageSize = 15;
	public int getPageSize() {return pageSize;}
	public void setPageSize(int pageSize) {this.pageSize = pageSize;}
	public int getPageNumber() {return pageNumber;}
	public void setPageNumber(int pageNumber) {this.pageNumber = pageNumber;}
	public Page<Log> findPageList(Log log) {
		WhereAndParas wp = getWhereAndParas(log);
		String where = "from"+ Log.TABLE + "where 1=1 "+wp.getWhere();
		return dao.paginate(log.getPageNumber(),log.getPageSize(),"select * ",where,wp.getParas());
	}
	public static final String TABLE = " sys_log ";
	public WhereAndParas getWhereAndParas(Log log){
		StringBuffer sql = new StringBuffer();
		List<Object> list = new ArrayList<Object>();
		WhereAndParas wap = new WhereAndParas();
		if(log.getId() != null && log.getId() > 0){
			sql.append(" and id = ?");
			list.add(log.getId());
		}
		if(log.getVersion() != null && log.getVersion() > 0){
			sql.append(" and version = ?");
			list.add(log.getVersion());
		}
		if(StringUtils.isNotEmpty(log.getBrowser())){
			sql.append(" and browser like ?");
			list.add("%"+log.getBrowser()+"%");
		}
		if(StringUtils.isNotEmpty(log.getIpAddress())){
			sql.append(" and ipAddress like ?");
			list.add("%"+log.getIpAddress()+"%");
		}
		if(StringUtils.isNotEmpty(log.getIsPass())){
			sql.append(" and isPass like ?");
			list.add("%"+log.getIsPass()+"%");
		}
		if(StringUtils.isNotEmpty(log.getLink())){
			sql.append(" and link like ?");
			list.add("%"+log.getLink()+"%");
		}
		if(StringUtils.isNotEmpty(log.getMac())){
			sql.append(" and mac like ?");
			list.add("%"+log.getMac()+"%");
		}
		if(StringUtils.isNotEmpty(log.getOperInfo())){
			sql.append(" and operInfo like ?");
			list.add("%"+log.getOperInfo()+"%");
		}
		if(StringUtils.isNotEmpty(log.getPara())){
			sql.append(" and para like ?");
			list.add("%"+log.getPara()+"%");
		}
		if(StringUtils.isNotEmpty(log.getType())){
			sql.append(" and type like ?");
			list.add("%"+log.getType()+"%");
		}
		if(StringUtils.isNotEmpty(log.getUserCde())){
			sql.append(" and userCde like ?");
			list.add("%"+log.getUserCde()+"%");
		}
		if(StringUtils.isNotEmpty(log.getUserName())){
			sql.append(" and userName like ?");
			list.add("%"+log.getUserName()+"%");
		}
		wap.setWhere(sql.toString());
		wap.setParas(list.toArray());
		wap.setOrder(log.getStr("order"));
		return wap;
	}
}
