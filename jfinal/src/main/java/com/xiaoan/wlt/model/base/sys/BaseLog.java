package com.xiaoan.wlt.model.base.sys;

import com.xiaoan.wlt.common.jfinal.BaseModel;
import com.jfinal.plugin.activerecord.IBean;

import org.apache.commons.lang3.StringUtils;

import com.xiaoan.wlt.common.WhereAndParas;

import java.util.ArrayList;

import java.util.List;

/**
 * Generated by JFinal, do not modify this file.
 */
@SuppressWarnings("serial")
public abstract class BaseLog<M extends BaseLog<M>> extends BaseModel<M> implements IBean {

	public void setId(java.lang.Long id) {
		set("id", id);
	}

	public java.lang.Long getId() {
		return get("id");
	}

	public void setCreateTime(java.util.Date createTime) {
		set("createTime", createTime);
	}

	public java.util.Date getCreateTime() {
		return get("createTime");
	}

	public void setUpdateTime(java.util.Date updateTime) {
		set("updateTime", updateTime);
	}

	public java.util.Date getUpdateTime() {
		return get("updateTime");
	}

	public void setVersion(java.lang.Integer version) {
		set("version", version);
	}

	public java.lang.Integer getVersion() {
		return get("version");
	}

	public void setBrowser(java.lang.String browser) {
		set("browser", browser);
	}

	public java.lang.String getBrowser() {
		return get("browser");
	}

	public void setIpAddress(java.lang.String ipAddress) {
		set("ipAddress", ipAddress);
	}

	public java.lang.String getIpAddress() {
		return get("ipAddress");
	}

	public void setIsPass(java.lang.String isPass) {
		set("isPass", isPass);
	}

	public java.lang.String getIsPass() {
		return get("isPass");
	}

	public void setLink(java.lang.String link) {
		set("link", link);
	}

	public java.lang.String getLink() {
		return get("link");
	}

	public void setMac(java.lang.String mac) {
		set("mac", mac);
	}

	public java.lang.String getMac() {
		return get("mac");
	}

	public void setOperInfo(java.lang.String operInfo) {
		set("operInfo", operInfo);
	}

	public java.lang.String getOperInfo() {
		return get("operInfo");
	}

	public void setPara(java.lang.String para) {
		set("para", para);
	}

	public java.lang.String getPara() {
		return get("para");
	}

	public void setType(java.lang.String type) {
		set("type", type);
	}

	public java.lang.String getType() {
		return get("type");
	}

	public void setUserCde(java.lang.String userCde) {
		set("userCde", userCde);
	}

	public java.lang.String getUserCde() {
		return get("userCde");
	}

	public void setUserName(java.lang.String userName) {
		set("userName", userName);
	}

	public java.lang.String getUserName() {
		return get("userName");
	}

	public static final String TABLE = " sys_log ";
	public WhereAndParas getWhereAndParas(BaseLog log){
		StringBuffer sql = new StringBuffer();
		List<Object> list = new ArrayList<Object>();
		WhereAndParas wap = new WhereAndParas();
		if(log.getId() != null && log.getId() > 0){
			sql.append(" and o.id = ?");
			list.add(log.getId());
		}
		if(log.getVersion() != null && log.getVersion() > 0){
			sql.append(" and o.version = ?");
			list.add(log.getVersion());
		}
		if(StringUtils.isNotEmpty(log.getBrowser())){
			sql.append(" and o.browser like ?");
			list.add("%"+log.getBrowser()+"%");
		}
		if(StringUtils.isNotEmpty(log.getIpAddress())){
			sql.append(" and o.ipAddress like ?");
			list.add("%"+log.getIpAddress()+"%");
		}
		if(StringUtils.isNotEmpty(log.getIsPass())){
			sql.append(" and o.isPass like ?");
			list.add("%"+log.getIsPass()+"%");
		}
		if(StringUtils.isNotEmpty(log.getLink())){
			sql.append(" and o.link like ?");
			list.add("%"+log.getLink()+"%");
		}
		if(StringUtils.isNotEmpty(log.getMac())){
			sql.append(" and o.mac like ?");
			list.add("%"+log.getMac()+"%");
		}
		if(StringUtils.isNotEmpty(log.getOperInfo())){
			sql.append(" and o.operInfo like ?");
			list.add("%"+log.getOperInfo()+"%");
		}
		if(StringUtils.isNotEmpty(log.getPara())){
			sql.append(" and o.para like ?");
			list.add("%"+log.getPara()+"%");
		}
		if(StringUtils.isNotEmpty(log.getType())){
			sql.append(" and o.type like ?");
			list.add("%"+log.getType()+"%");
		}
		if(StringUtils.isNotEmpty(log.getUserCde())){
			sql.append(" and o.userCde like ?");
			list.add("%"+log.getUserCde()+"%");
		}
		if(StringUtils.isNotEmpty(log.getUserName())){
			sql.append(" and o.userName like ?");
			list.add("%"+log.getUserName()+"%");
		}
		wap.setWhere(sql.toString());
		wap.setParas(list.toArray());
		return wap;
	}
}
