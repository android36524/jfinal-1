package com.xiaoan.wlt.model.base.erp.jxc;

import com.xiaoan.wlt.common.jfinal.BaseModel;
import com.jfinal.plugin.activerecord.IBean;

import org.apache.commons.lang3.StringUtils;

import com.xiaoan.wlt.common.WhereAndParas;

import java.util.ArrayList;

import java.util.List;

/**
 * Generated by JFinal, do not modify this file.
 */
@SuppressWarnings("serial")
public abstract class BaseShopsInfo<M extends BaseShopsInfo<M>> extends BaseModel<M> implements IBean {

	public void setId(java.lang.Integer id) {
		set("id", id);
	}

	public java.lang.Integer getId() {
		return get("id");
	}

	public void setName(java.lang.String name) {
		set("name", name);
	}

	public java.lang.String getName() {
		return get("name");
	}

	public void setProvince(java.lang.String province) {
		set("province", province);
	}

	public java.lang.String getProvince() {
		return get("province");
	}

	public void setCity(java.lang.String city) {
		set("city", city);
	}

	public java.lang.String getCity() {
		return get("city");
	}

	public void setArea(java.lang.String area) {
		set("area", area);
	}

	public java.lang.String getArea() {
		return get("area");
	}

	public void setHouse(java.lang.String house) {
		set("house", house);
	}

	public java.lang.String getHouse() {
		return get("house");
	}

	public void setAppellation(java.lang.String appellation) {
		set("appellation", appellation);
	}

	public java.lang.String getAppellation() {
		return get("appellation");
	}

	public void setMobile(java.lang.String mobile) {
		set("mobile", mobile);
	}

	public java.lang.String getMobile() {
		return get("mobile");
	}

	public void setScode(java.lang.String scode) {
		set("scode", scode);
	}

	public java.lang.String getScode() {
		return get("scode");
	}

	public void setRemarks(java.lang.String remarks) {
		set("remarks", remarks);
	}

	public java.lang.String getRemarks() {
		return get("remarks");
	}

	public void setCreateTime(java.util.Date createTime) {
		set("create_time", createTime);
	}

	public java.util.Date getCreateTime() {
		return get("create_time");
	}

	public void setUpdateTime(java.util.Date updateTime) {
		set("update_time", updateTime);
	}

	public java.util.Date getUpdateTime() {
		return get("update_time");
	}

	public void setVersion(java.lang.Integer version) {
		set("version", version);
	}

	public java.lang.Integer getVersion() {
		return get("version");
	}

	public static final String TABLE = " erp_jxc_shops_info ";
	public WhereAndParas getWhereAndParas(BaseShopsInfo shopsInfo){
		StringBuffer sql = new StringBuffer();
		List<Object> list = new ArrayList<Object>();
		WhereAndParas wap = new WhereAndParas();
		if(shopsInfo.getId() != null && shopsInfo.getId() > 0){
			sql.append(" and o.id = ?");
			list.add(shopsInfo.getId());
		}
		if(StringUtils.isNotEmpty(shopsInfo.getName())){
			sql.append(" and o.name like ?");
			list.add("%"+shopsInfo.getName()+"%");
		}
		if(StringUtils.isNotEmpty(shopsInfo.getProvince())){
			sql.append(" and o.province like ?");
			list.add("%"+shopsInfo.getProvince()+"%");
		}
		if(StringUtils.isNotEmpty(shopsInfo.getCity())){
			sql.append(" and o.city like ?");
			list.add("%"+shopsInfo.getCity()+"%");
		}
		if(StringUtils.isNotEmpty(shopsInfo.getArea())){
			sql.append(" and o.area like ?");
			list.add("%"+shopsInfo.getArea()+"%");
		}
		if(StringUtils.isNotEmpty(shopsInfo.getHouse())){
			sql.append(" and o.house like ?");
			list.add("%"+shopsInfo.getHouse()+"%");
		}
		if(StringUtils.isNotEmpty(shopsInfo.getAppellation())){
			sql.append(" and o.appellation like ?");
			list.add("%"+shopsInfo.getAppellation()+"%");
		}
		if(StringUtils.isNotEmpty(shopsInfo.getMobile())){
			sql.append(" and o.mobile like ?");
			list.add("%"+shopsInfo.getMobile()+"%");
		}
		if(StringUtils.isNotEmpty(shopsInfo.getScode())){
			sql.append(" and o.scode like ?");
			list.add("%"+shopsInfo.getScode()+"%");
		}
		if(StringUtils.isNotEmpty(shopsInfo.getRemarks())){
			sql.append(" and o.remarks like ?");
			list.add("%"+shopsInfo.getRemarks()+"%");
		}
		if(shopsInfo.getVersion() != null && shopsInfo.getVersion() > 0){
			sql.append(" and o.version = ?");
			list.add(shopsInfo.getVersion());
		}
		wap.setWhere(sql.toString());
		wap.setParas(list.toArray());
		return wap;
	}
}
