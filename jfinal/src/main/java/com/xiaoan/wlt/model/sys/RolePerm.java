package com.xiaoan.wlt.model.sys;

import org.apache.commons.lang3.StringUtils;

import com.xiaoan.wlt.common.WhereAndParas;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;
import com.xiaoan.wlt.model.base.sys.BaseRolePerm;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class RolePerm extends BaseRolePerm<RolePerm> {
	public static final RolePerm dao = new RolePerm();
	private int pageNumber = 1;
	private int pageSize = 15;
	public int getPageSize() {return pageSize;}
	public void setPageSize(int pageSize) {this.pageSize = pageSize;}
	public int getPageNumber() {return pageNumber;}
	public void setPageNumber(int pageNumber) {this.pageNumber = pageNumber;}
	public Page<RolePerm> findPageList(RolePerm rolePerm) {
		WhereAndParas wp = getWhereAndParas(rolePerm);
		return dao.paginate(rolePerm.getPageNumber(),rolePerm.getPageSize(),"select * ","from"+ RolePerm.TABLE + "where 1=1 " +wp.getWhere(),wp.getParas());
	}
	public static final String TABLE = " sys_role_perm ";
	public WhereAndParas getWhereAndParas(RolePerm rolePerm){
		StringBuffer sql = new StringBuffer();
		List<Object> list = new ArrayList<Object>();
		WhereAndParas wap = new WhereAndParas();
		if(rolePerm.getId() != null && rolePerm.getId() > 0){
			sql.append(" and id = ?");
			list.add(rolePerm.getId());
		}
		if(rolePerm.getVersion() != null && rolePerm.getVersion() > 0){
			sql.append(" and version = ?");
			list.add(rolePerm.getVersion());
		}
		if(StringUtils.isNotEmpty(rolePerm.getFunctionId())){
			sql.append(" and functionId like ?");
			list.add("%"+rolePerm.getFunctionId()+"%");
		}
		if(rolePerm.getRoleId() != null && rolePerm.getRoleId() > 0){
			sql.append(" and roleId = ?");
			list.add(rolePerm.getRoleId());
		}
		wap.setWhere(sql.toString());
		wap.setParas(list.toArray());
		return wap;
	}
	public Set<String> findPermByRoleId(String id) {
		List<RolePerm> list = dao.find("select * from sys_role_perm where roleId=?", id);
		Set<String> set = new HashSet<String>();
		for(RolePerm rp : list){
			set.add(rp.getFunctionId());
		}
		return set;
	}
	
	public void deleteByRoleId(String roleId) {
		Db.update("DELETE FROM sys_role_perm where roleId=?",roleId);
	}
}
