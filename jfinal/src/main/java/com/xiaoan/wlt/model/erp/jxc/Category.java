package com.xiaoan.wlt.model.erp.jxc;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang3.StringUtils;

import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.jfinal.plugin.activerecord.Page;
import com.xiaoan.wlt.common.WhereAndParas;
import com.xiaoan.wlt.model.base.erp.jxc.BaseCategory;
import com.xiaoan.wlt.shiro.UserContext;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Category extends BaseCategory<Category> {
	public static final Category dao = new Category();
	private int pageNumber = 1;
	private int pageSize = 15;
	public int getPageSize() {return pageSize;}
	public void setPageSize(int pageSize) {this.pageSize = pageSize;}
	public int getPageNumber() {return pageNumber;}
	public void setPageNumber(int pageNumber) {this.pageNumber = pageNumber;}
	public Page<Category> findPageList(Category category) {
		WhereAndParas wp = getWhereAndParas(category);
		return dao.paginate(category.getPageNumber(),category.getPageSize(),"select * ","from"+ Category.TABLE + "where 1=1 " +wp.getWhere(),wp.getParas());
	}
	public static final String TABLE = " erp_jxc_category ";
	public WhereAndParas getWhereAndParas(Category category){
		StringBuffer sql = new StringBuffer();
		List<Object> list = new ArrayList<Object>();
		WhereAndParas wap = new WhereAndParas();
		if(category.getId() != null && category.getId() > 0){
			sql.append(" and id = ?");
			list.add(category.getId());
		}
		if(category.getSId() != null && category.getSId() > 0){
			sql.append(" and s_id = ?");
			list.add(category.getSId());
		}
		if(category.getParentId() != null && category.getParentId() > 0){
			sql.append(" and parent_id = ?");
			list.add(category.getParentId());
		}
		if(StringUtils.isNotEmpty(category.getCategory())){
			sql.append(" and category like ?");
			list.add("%"+category.getCategory()+"%");
		}
		if(StringUtils.isNotEmpty(category.getName())){
			sql.append(" and name like ?");
			list.add("%"+category.getName()+"%");
		}
		if(StringUtils.isNotEmpty(category.getState())){
			sql.append(" and state like ?");
			list.add("%"+category.getState()+"%");
		}
		if(category.getVersion() != null && category.getVersion() > 0){
			sql.append(" and version = ?");
			list.add(category.getVersion());
		}
		wap.setWhere(sql.toString());
		wap.setParas(list.toArray());
		return wap;
	}
	
	/*
	 * var zNodes = [
		                 {"id":1, "pId":0, "name":"test1"},
		                 {"id":11, "pId":1, "name":"test11"},
		                 {"id":12, "pId":1, "name":"test12"},
		                 {"id":111, "pId":11, "name":"test111"}
		             ];
	 */
	/**
	 * 
	 * @return
	 */
	public JsonArray findTreeList() {
		List<Category> list = findList();
		JsonArray ja = new JsonArray();
		for(Category v : list){
			JsonObject jo = new JsonObject();
			jo.addProperty("id", v.getId());
			jo.addProperty("pId", v.getParentId() == null ? 0:v.getParentId());
			jo.addProperty("name", v.getName());
			jo.addProperty("open",true);
			ja.add(jo);
		}
		return ja;
	}
	public List<Category> findList() {
		String sql = "select * from erp_jxc_category where s_id = ?";
		return dao.find(sql, UserContext.getShopsInfo());
	}
}
