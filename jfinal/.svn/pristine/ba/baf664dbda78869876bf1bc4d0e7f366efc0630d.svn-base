package com.xiaoan.wlt.model.base.erp.jxc;

import com.xiaoan.wlt.common.jfinal.BaseModel;
import com.jfinal.plugin.activerecord.IBean;

import org.apache.commons.lang3.StringUtils;

import com.xiaoan.wlt.common.WhereAndParas;

import java.util.ArrayList;

import java.util.List;

/**
 * Generated by JFinal, do not modify this file.
 */
@SuppressWarnings("serial")
public abstract class BaseOutList<M extends BaseOutList<M>> extends BaseModel<M> implements IBean {

	public void setId(java.lang.Integer id) {
		set("id", id);
	}

	public java.lang.Integer getId() {
		return get("id");
	}

	public void setOutId(java.lang.Integer outId) {
		set("out_id", outId);
	}

	public java.lang.Integer getOutId() {
		return get("out_id");
	}

	public void setProductId(java.lang.Integer productId) {
		set("product_id", productId);
	}

	public java.lang.Integer getProductId() {
		return get("product_id");
	}

	public void setDepotId(java.lang.Integer depotId) {
		set("depot_id", depotId);
	}

	public java.lang.Integer getDepotId() {
		return get("depot_id");
	}

	public void setNum(java.lang.Double num) {
		set("num", num);
	}

	public java.lang.Double getNum() {
		return get("num");
	}

	public void setUnit(java.lang.String unit) {
		set("unit", unit);
	}

	public java.lang.String getUnit() {
		return get("unit");
	}

	public void setPriceTotal(java.lang.Double priceTotal) {
		set("price_total", priceTotal);
	}

	public java.lang.Double getPriceTotal() {
		return get("price_total");
	}

	public void setPriceOut(java.lang.Double priceOut) {
		set("price_out", priceOut);
	}

	public java.lang.Double getPriceOut() {
		return get("price_out");
	}

	public void setVersion(java.lang.Integer version) {
		set("version", version);
	}

	public java.lang.Integer getVersion() {
		return get("version");
	}

	public static final String TABLE = " erp_jxc_out_list ";
	public WhereAndParas getWhereAndParas(BaseOutList outList){
		StringBuffer sql = new StringBuffer();
		List<Object> list = new ArrayList<Object>();
		WhereAndParas wap = new WhereAndParas();
		if(outList.getId() != null && outList.getId() > 0){
			sql.append(" and o.id = ?");
			list.add(outList.getId());
		}
		if(outList.getOutId() != null && outList.getOutId() > 0){
			sql.append(" and o.out_id = ?");
			list.add(outList.getOutId());
		}
		if(outList.getProductId() != null && outList.getProductId() > 0){
			sql.append(" and o.product_id = ?");
			list.add(outList.getProductId());
		}
		if(outList.getDepotId() != null && outList.getDepotId() > 0){
			sql.append(" and o.depot_id = ?");
			list.add(outList.getDepotId());
		}
		if(outList.getNum() != null && outList.getNum() > 0){
			sql.append(" and o.num = ?");
			list.add(outList.getNum());
		}
		if(StringUtils.isNotEmpty(outList.getUnit())){
			sql.append(" and o.unit like ?");
			list.add("%"+outList.getUnit()+"%");
		}
		if(outList.getPriceTotal() != null && outList.getPriceTotal() > 0){
			sql.append(" and o.price_total = ?");
			list.add(outList.getPriceTotal());
		}
		if(outList.getPriceOut() != null && outList.getPriceOut() > 0){
			sql.append(" and o.price_out = ?");
			list.add(outList.getPriceOut());
		}
		if(outList.getVersion() != null && outList.getVersion() > 0){
			sql.append(" and o.version = ?");
			list.add(outList.getVersion());
		}
		wap.setWhere(sql.toString());
		wap.setParas(list.toArray());
		return wap;
	}
}
