package com.xiaoan.wlt.model.base.erp.jxc;

import com.xiaoan.wlt.common.jfinal.BaseModel;
import com.jfinal.plugin.activerecord.IBean;

import org.apache.commons.lang3.StringUtils;

import com.xiaoan.wlt.common.WhereAndParas;

import java.util.ArrayList;

import java.util.List;

/**
 * Generated by JFinal, do not modify this file.
 */
@SuppressWarnings("serial")
public abstract class BaseStock<M extends BaseStock<M>> extends BaseModel<M> implements IBean {

	public void setId(java.lang.Integer id) {
		set("id", id);
	}

	public java.lang.Integer getId() {
		return get("id");
	}

	public void setSId(java.lang.Integer sId) {
		set("s_id", sId);
	}

	public java.lang.Integer getSId() {
		return get("s_id");
	}

	public void setDepotId(java.lang.Integer depotId) {
		set("depot_id", depotId);
	}

	public java.lang.Integer getDepotId() {
		return get("depot_id");
	}

	public void setProductId(java.lang.Integer productId) {
		set("product_id", productId);
	}

	public java.lang.Integer getProductId() {
		return get("product_id");
	}

	public void setCode(java.lang.String code) {
		set("code", code);
	}

	public java.lang.String getCode() {
		return get("code");
	}

	public void setCreateTime(java.util.Date createTime) {
		set("create_time", createTime);
	}

	public java.util.Date getCreateTime() {
		return get("create_time");
	}

	public void setUpdateTime(java.util.Date updateTime) {
		set("update_time", updateTime);
	}

	public java.util.Date getUpdateTime() {
		return get("update_time");
	}

	public void setNum(java.lang.Double num) {
		set("num", num);
	}

	public java.lang.Double getNum() {
		return get("num");
	}

	public void setRemarks(java.lang.String remarks) {
		set("remarks", remarks);
	}

	public java.lang.String getRemarks() {
		return get("remarks");
	}

	public void setVersion(java.lang.Integer version) {
		set("version", version);
	}

	public java.lang.Integer getVersion() {
		return get("version");
	}

	public static final String TABLE = " erp_jxc_stock ";
	public WhereAndParas getWhereAndParas(BaseStock stock){
		StringBuffer sql = new StringBuffer();
		List<Object> list = new ArrayList<Object>();
		WhereAndParas wap = new WhereAndParas();
		if(stock.getId() != null && stock.getId() > 0){
			sql.append(" and o.id = ?");
			list.add(stock.getId());
		}
		if(stock.getSId() != null && stock.getSId() > 0){
			sql.append(" and o.s_id = ?");
			list.add(stock.getSId());
		}
		if(stock.getDepotId() != null && stock.getDepotId() > 0){
			sql.append(" and o.depot_id = ?");
			list.add(stock.getDepotId());
		}
		if(stock.getProductId() != null && stock.getProductId() > 0){
			sql.append(" and o.product_id = ?");
			list.add(stock.getProductId());
		}
		if(StringUtils.isNotEmpty(stock.getCode())){
			sql.append(" and o.code like ?");
			list.add("%"+stock.getCode()+"%");
		}
		if(stock.getNum() != null && stock.getNum() > 0){
			sql.append(" and o.num = ?");
			list.add(stock.getNum());
		}
		if(StringUtils.isNotEmpty(stock.getRemarks())){
			sql.append(" and o.remarks like ?");
			list.add("%"+stock.getRemarks()+"%");
		}
		if(stock.getVersion() != null && stock.getVersion() > 0){
			sql.append(" and o.version = ?");
			list.add(stock.getVersion());
		}
		wap.setWhere(sql.toString());
		wap.setParas(list.toArray());
		return wap;
	}
}
