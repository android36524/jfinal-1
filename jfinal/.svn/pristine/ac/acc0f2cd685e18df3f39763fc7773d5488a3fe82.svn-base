package com.xiaoan.wlt.model.t;

import org.apache.commons.lang3.StringUtils;

import com.xiaoan.wlt.common.WhereAndParas;

import java.util.ArrayList;

import java.util.List;

import com.jfinal.plugin.activerecord.Page;

import com.xiaoan.wlt.model.base.t.BaseStatSaleMonthTarget;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class StatSaleMonthTarget extends BaseStatSaleMonthTarget<StatSaleMonthTarget> {
	public static final StatSaleMonthTarget dao = new StatSaleMonthTarget();
	private int pageNumber = 1;
	private int pageSize = 15;
	public int getPageSize() {return pageSize;}
	public void setPageSize(int pageSize) {this.pageSize = pageSize;}
	public int getPageNumber() {return pageNumber;}
	public void setPageNumber(int pageNumber) {this.pageNumber = pageNumber;}
	public Page<StatSaleMonthTarget> findPageList(StatSaleMonthTarget statSaleMonthTarget) {
		WhereAndParas wp = getWhereAndParas(statSaleMonthTarget);
		return dao.paginate(statSaleMonthTarget.getPageNumber(),statSaleMonthTarget.getPageSize(),"select * ","from"+ StatSaleMonthTarget.TABLE + "where 1=1 " +wp.getWhere(),wp.getParas());
	}
	public static final String TABLE = " t_stat_sale_month_target ";
	public WhereAndParas getWhereAndParas(StatSaleMonthTarget statSaleMonthTarget){
		StringBuffer sql = new StringBuffer();
		List<Object> list = new ArrayList<Object>();
		WhereAndParas wap = new WhereAndParas();
		if(statSaleMonthTarget.getId() != null && statSaleMonthTarget.getId() > 0){
			sql.append(" and id = ?");
			list.add(statSaleMonthTarget.getId());
		}
		if(statSaleMonthTarget.getVersion() != null && statSaleMonthTarget.getVersion() > 0){
			sql.append(" and version = ?");
			list.add(statSaleMonthTarget.getVersion());
		}
		if(StringUtils.isNotEmpty(statSaleMonthTarget.getMonths())){
			sql.append(" and months like ?");
			list.add("%"+statSaleMonthTarget.getMonths()+"%");
		}
		if(statSaleMonthTarget.getSalesId() != null && statSaleMonthTarget.getSalesId() > 0){
			sql.append(" and salesId = ?");
			list.add(statSaleMonthTarget.getSalesId());
		}
		if(StringUtils.isNotEmpty(statSaleMonthTarget.getScode())){
			sql.append(" and scode like ?");
			list.add("%"+statSaleMonthTarget.getScode()+"%");
		}
		if(StringUtils.isNotEmpty(statSaleMonthTarget.getTargetType())){
			sql.append(" and targetType like ?");
			list.add("%"+statSaleMonthTarget.getTargetType()+"%");
		}
		if(StringUtils.isNotEmpty(statSaleMonthTarget.getTargetValue())){
			sql.append(" and targetValue like ?");
			list.add("%"+statSaleMonthTarget.getTargetValue()+"%");
		}
		if(StringUtils.isNotEmpty(statSaleMonthTarget.getCommNum())){
			sql.append(" and commNum like ?");
			list.add("%"+statSaleMonthTarget.getCommNum()+"%");
		}
		wap.setWhere(sql.toString());
		wap.setParas(list.toArray());
		return wap;
	}
}
