package com.xiaoan.wlt.model.base.sys;

import com.xiaoan.wlt.common.jfinal.BaseModel;
import com.jfinal.plugin.activerecord.IBean;

import org.apache.commons.lang3.StringUtils;

import com.xiaoan.wlt.common.WhereAndParas;

import java.util.ArrayList;

import java.util.List;

/**
 * Generated by JFinal, do not modify this file.
 */
@SuppressWarnings("serial")
public abstract class BaseUser<M extends BaseUser<M>> extends BaseModel<M> implements IBean {

	public void setId(java.lang.Long id) {
		set("id", id);
	}

	public java.lang.Long getId() {
		return get("id");
	}

	public void setCreateTime(java.util.Date createTime) {
		set("createTime", createTime);
	}

	public java.util.Date getCreateTime() {
		return get("createTime");
	}

	public void setUpdateTime(java.util.Date updateTime) {
		set("updateTime", updateTime);
	}

	public java.util.Date getUpdateTime() {
		return get("updateTime");
	}

	public void setVersion(java.lang.Integer version) {
		set("version", version);
	}

	public java.lang.Integer getVersion() {
		return get("version");
	}

	public void setUserCode(java.lang.String userCode) {
		set("userCode", userCode);
	}

	public java.lang.String getUserCode() {
		return get("userCode");
	}

	public void setUserName(java.lang.String userName) {
		set("userName", userName);
	}

	public java.lang.String getUserName() {
		return get("userName");
	}

	public void setUserType(java.lang.String userType) {
		set("userType", userType);
	}

	public java.lang.String getUserType() {
		return get("userType");
	}

	public void setPwd(java.lang.String pwd) {
		set("pwd", pwd);
	}

	public java.lang.String getPwd() {
		return get("pwd");
	}

	public void setPhone(java.lang.String phone) {
		set("phone", phone);
	}

	public java.lang.String getPhone() {
		return get("phone");
	}

	public void setState(java.lang.String state) {
		set("state", state);
	}

	public java.lang.String getState() {
		return get("state");
	}

	public void setDelState(java.lang.String delState) {
		set("delState", delState);
	}

	public java.lang.String getDelState() {
		return get("delState");
	}

	public void setOpenid(java.lang.String openid) {
		set("openid", openid);
	}

	public java.lang.String getOpenid() {
		return get("openid");
	}

	public void setDepartment(java.lang.Long department) {
		set("department", department);
	}

	public java.lang.Long getDepartment() {
		return get("department");
	}

	public void setPosition(java.lang.Long position) {
		set("position", position);
	}

	public java.lang.Long getPosition() {
		return get("position");
	}

	public void setScore(java.lang.Float score) {
		set("score", score);
	}

	public java.lang.Float getScore() {
		return get("score");
	}

	public void setBackupPhone(java.lang.String backupPhone) {
		set("backupPhone", backupPhone);
	}

	public java.lang.String getBackupPhone() {
		return get("backupPhone");
	}

	public void setShopsInfo(java.lang.Integer shopsInfo) {
		set("shopsInfo", shopsInfo);
	}

	public java.lang.Integer getShopsInfo() {
		return get("shopsInfo");
	}

	public static final String TABLE = " sys_user ";
	public WhereAndParas getWhereAndParas(BaseUser user){
		StringBuffer sql = new StringBuffer();
		List<Object> list = new ArrayList<Object>();
		WhereAndParas wap = new WhereAndParas();
		if(user.getId() != null && user.getId() > 0){
			sql.append(" and o.id = ?");
			list.add(user.getId());
		}
		if(user.getVersion() != null && user.getVersion() > 0){
			sql.append(" and o.version = ?");
			list.add(user.getVersion());
		}
		if(StringUtils.isNotEmpty(user.getUserCode())){
			sql.append(" and o.userCode like ?");
			list.add("%"+user.getUserCode()+"%");
		}
		if(StringUtils.isNotEmpty(user.getUserName())){
			sql.append(" and o.userName like ?");
			list.add("%"+user.getUserName()+"%");
		}
		if(StringUtils.isNotEmpty(user.getUserType())){
			sql.append(" and o.userType like ?");
			list.add("%"+user.getUserType()+"%");
		}
		if(StringUtils.isNotEmpty(user.getPwd())){
			sql.append(" and o.pwd like ?");
			list.add("%"+user.getPwd()+"%");
		}
		if(StringUtils.isNotEmpty(user.getPhone())){
			sql.append(" and o.phone like ?");
			list.add("%"+user.getPhone()+"%");
		}
		if(StringUtils.isNotEmpty(user.getState())){
			sql.append(" and o.state like ?");
			list.add("%"+user.getState()+"%");
		}
		if(StringUtils.isNotEmpty(user.getDelState())){
			sql.append(" and o.delState like ?");
			list.add("%"+user.getDelState()+"%");
		}
		if(StringUtils.isNotEmpty(user.getOpenid())){
			sql.append(" and o.openid like ?");
			list.add("%"+user.getOpenid()+"%");
		}
		if(user.getDepartment() != null && user.getDepartment() > 0){
			sql.append(" and o.department = ?");
			list.add(user.getDepartment());
		}
		if(user.getPosition() != null && user.getPosition() > 0){
			sql.append(" and o.position = ?");
			list.add(user.getPosition());
		}
		if(user.getScore() != null && user.getScore() > 0){
			sql.append(" and o.score = ?");
			list.add(user.getScore());
		}
		if(StringUtils.isNotEmpty(user.getBackupPhone())){
			sql.append(" and o.backupPhone like ?");
			list.add("%"+user.getBackupPhone()+"%");
		}
		if(user.getShopsInfo() != null && user.getShopsInfo() > 0){
			sql.append(" and o.shopsInfo = ?");
			list.add(user.getShopsInfo());
		}
		wap.setWhere(sql.toString());
		wap.setParas(list.toArray());
		return wap;
	}
}
