package com.xiaoan.wlt.model.t;

import org.apache.commons.lang3.StringUtils;

import com.xiaoan.wlt.common.WhereAndParas;

import java.util.ArrayList;

import java.util.List;

import com.jfinal.plugin.activerecord.Page;

import com.xiaoan.wlt.model.base.t.BaseCustAccount;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class CustAccount extends BaseCustAccount<CustAccount> {
	public static final CustAccount dao = new CustAccount();
	private int pageNumber = 1;
	private int pageSize = 15;
	public int getPageSize() {return pageSize;}
	public void setPageSize(int pageSize) {this.pageSize = pageSize;}
	public int getPageNumber() {return pageNumber;}
	public void setPageNumber(int pageNumber) {this.pageNumber = pageNumber;}
	public Page<CustAccount> findPageList(CustAccount custAccount) {
		WhereAndParas wp = getWhereAndParas(custAccount);
		return dao.paginate(custAccount.getPageNumber(),custAccount.getPageSize(),"select * ","from"+ CustAccount.TABLE + "where 1=1 " +wp.getWhere(),wp.getParas());
	}
	public static final String TABLE = " t_cust_account ";
	public WhereAndParas getWhereAndParas(CustAccount custAccount){
		StringBuffer sql = new StringBuffer();
		List<Object> list = new ArrayList<Object>();
		WhereAndParas wap = new WhereAndParas();
		if(custAccount.getId() != null && custAccount.getId() > 0){
			sql.append(" and id = ?");
			list.add(custAccount.getId());
		}
		if(custAccount.getVersion() != null && custAccount.getVersion() > 0){
			sql.append(" and version = ?");
			list.add(custAccount.getVersion());
		}
		if(StringUtils.isNotEmpty(custAccount.getAppKey())){
			sql.append(" and appKey like ?");
			list.add("%"+custAccount.getAppKey()+"%");
		}
		if(StringUtils.isNotEmpty(custAccount.getCustAccount())){
			sql.append(" and custAccount like ?");
			list.add("%"+custAccount.getCustAccount()+"%");
		}
		if(StringUtils.isNotEmpty(custAccount.getOrgPermkey())){
			sql.append(" and orgPermkey like ?");
			list.add("%"+custAccount.getOrgPermkey()+"%");
		}
		if(StringUtils.isNotEmpty(custAccount.getOrgTempKey())){
			sql.append(" and orgTempKey like ?");
			list.add("%"+custAccount.getOrgTempKey()+"%");
		}
		if(StringUtils.isNotEmpty(custAccount.getState())){
			sql.append(" and state like ?");
			list.add("%"+custAccount.getState()+"%");
		}
		if(custAccount.getUserId() != null && custAccount.getUserId() > 0){
			sql.append(" and userId = ?");
			list.add(custAccount.getUserId());
		}
		wap.setWhere(sql.toString());
		wap.setParas(list.toArray());
		return wap;
	}
}
