package com.xiaoan.wlt.model.base.t;

import com.xiaoan.wlt.common.jfinal.BaseModel;
import com.jfinal.plugin.activerecord.IBean;

import org.apache.commons.lang3.StringUtils;

import com.xiaoan.wlt.common.WhereAndParas;

import java.util.ArrayList;

import java.util.List;

/**
 * Generated by JFinal, do not modify this file.
 */
@SuppressWarnings("serial")
public abstract class BaseCustAccount<M extends BaseCustAccount<M>> extends BaseModel<M> implements IBean {

	public void setId(java.lang.Long id) {
		set("id", id);
	}

	public java.lang.Long getId() {
		return get("id");
	}

	public void setCreateTime(java.util.Date createTime) {
		set("createTime", createTime);
	}

	public java.util.Date getCreateTime() {
		return get("createTime");
	}

	public void setUpdateTime(java.util.Date updateTime) {
		set("updateTime", updateTime);
	}

	public java.util.Date getUpdateTime() {
		return get("updateTime");
	}

	public void setVersion(java.lang.Integer version) {
		set("version", version);
	}

	public java.lang.Integer getVersion() {
		return get("version");
	}

	public void setAppKey(java.lang.String appKey) {
		set("appKey", appKey);
	}

	public java.lang.String getAppKey() {
		return get("appKey");
	}

	public void setCustAccount(java.lang.String custAccount) {
		set("custAccount", custAccount);
	}

	public java.lang.String getCustAccount() {
		return get("custAccount");
	}

	public void setOrgPermkey(java.lang.String orgPermkey) {
		set("orgPermkey", orgPermkey);
	}

	public java.lang.String getOrgPermkey() {
		return get("orgPermkey");
	}

	public void setOrgTempKey(java.lang.String orgTempKey) {
		set("orgTempKey", orgTempKey);
	}

	public java.lang.String getOrgTempKey() {
		return get("orgTempKey");
	}

	public void setState(java.lang.String state) {
		set("state", state);
	}

	public java.lang.String getState() {
		return get("state");
	}

	public void setUserId(java.lang.Long userId) {
		set("userId", userId);
	}

	public java.lang.Long getUserId() {
		return get("userId");
	}

	public static final String TABLE = " t_cust_account ";
	public WhereAndParas getWhereAndParas(BaseCustAccount custAccount){
		StringBuffer sql = new StringBuffer();
		List<Object> list = new ArrayList<Object>();
		WhereAndParas wap = new WhereAndParas();
		if(custAccount.getId() != null && custAccount.getId() > 0){
			sql.append(" and o.id = ?");
			list.add(custAccount.getId());
		}
		if(custAccount.getVersion() != null && custAccount.getVersion() > 0){
			sql.append(" and o.version = ?");
			list.add(custAccount.getVersion());
		}
		if(StringUtils.isNotEmpty(custAccount.getAppKey())){
			sql.append(" and o.appKey like ?");
			list.add("%"+custAccount.getAppKey()+"%");
		}
		if(StringUtils.isNotEmpty(custAccount.getCustAccount())){
			sql.append(" and o.custAccount like ?");
			list.add("%"+custAccount.getCustAccount()+"%");
		}
		if(StringUtils.isNotEmpty(custAccount.getOrgPermkey())){
			sql.append(" and o.orgPermkey like ?");
			list.add("%"+custAccount.getOrgPermkey()+"%");
		}
		if(StringUtils.isNotEmpty(custAccount.getOrgTempKey())){
			sql.append(" and o.orgTempKey like ?");
			list.add("%"+custAccount.getOrgTempKey()+"%");
		}
		if(StringUtils.isNotEmpty(custAccount.getState())){
			sql.append(" and o.state like ?");
			list.add("%"+custAccount.getState()+"%");
		}
		if(custAccount.getUserId() != null && custAccount.getUserId() > 0){
			sql.append(" and o.userId = ?");
			list.add(custAccount.getUserId());
		}
		wap.setWhere(sql.toString());
		wap.setParas(list.toArray());
		return wap;
	}
}
