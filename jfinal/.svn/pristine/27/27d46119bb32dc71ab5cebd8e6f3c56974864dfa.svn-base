package com.xiaoan.wlt.model.sys;

import org.apache.commons.lang3.StringUtils;

import com.xiaoan.wlt.common.WhereAndParas;

import java.util.ArrayList;

import java.util.List;

import com.jfinal.plugin.activerecord.Page;
import com.xiaoan.wlt.model.base.sys.BaseUser;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class User extends BaseUser<User> {
	public static final User dao = new User();
	private int pageNumber = 1;
	private int pageSize = 15;
	public int getPageSize() {return pageSize;}
	public void setPageSize(int pageSize) {this.pageSize = pageSize;}
	public int getPageNumber() {return pageNumber;}
	public void setPageNumber(int pageNumber) {this.pageNumber = pageNumber;}
	public Page<User> findPageList(User user) {
		WhereAndParas wp = getWhereAndParas(user);
		return dao.paginate(user.getPageNumber(),user.getPageSize(),"select * ","from"+ User.TABLE + "where 1=1 " +wp.getWhere(),wp.getParas());
	}
	public static final String TABLE = " sys_user ";
	public WhereAndParas getWhereAndParas(User user){
		StringBuffer sql = new StringBuffer();
		List<Object> list = new ArrayList<Object>();
		WhereAndParas wap = new WhereAndParas();
		if(user.getId() != null && user.getId() > 0){
			sql.append(" and id = ?");
			list.add(user.getId());
		}
		if(user.getVersion() != null && user.getVersion() > 0){
			sql.append(" and version = ?");
			list.add(user.getVersion());
		}
		if(StringUtils.isNotEmpty(user.getUserCode())){
			sql.append(" and userCode like ?");
			list.add("%"+user.getUserCode()+"%");
		}
		if(StringUtils.isNotEmpty(user.getUserName())){
			sql.append(" and userName like ?");
			list.add("%"+user.getUserName()+"%");
		}
		if(StringUtils.isNotEmpty(user.getUserType())){
			sql.append(" and userType like ?");
			list.add("%"+user.getUserType()+"%");
		}
		if(StringUtils.isNotEmpty(user.getPwd())){
			sql.append(" and pwd like ?");
			list.add("%"+user.getPwd()+"%");
		}
		if(StringUtils.isNotEmpty(user.getPhone())){
			sql.append(" and phone like ?");
			list.add("%"+user.getPhone()+"%");
		}
		if(StringUtils.isNotEmpty(user.getState())){
			sql.append(" and state like ?");
			list.add("%"+user.getState()+"%");
		}
		if(StringUtils.isNotEmpty(user.getDelState())){
			sql.append(" and delState like ?");
			list.add("%"+user.getDelState()+"%");
		}
		if(StringUtils.isNotEmpty(user.getOpenid())){
			sql.append(" and openid like ?");
			list.add("%"+user.getOpenid()+"%");
		}
		if(user.getDepartment() != null && user.getDepartment() > 0){
			sql.append(" and department = ?");
			list.add(user.getDepartment());
		}
		if(user.getPosition() != null && user.getPosition() > 0){
			sql.append(" and position = ?");
			list.add(user.getPosition());
		}
		if(user.getScore() != null && user.getScore() > 0){
			sql.append(" and score = ?");
			list.add(user.getScore());
		}
		if(StringUtils.isNotEmpty(user.getBackupPhone())){
			sql.append(" and backupPhone like ?");
			list.add("%"+user.getBackupPhone()+"%");
		}
		wap.setWhere(sql.toString());
		wap.setParas(list.toArray());
		return wap;
	}
	
	public User findByUsername(String userCode) {
		return User.dao.findFirst("select * from sys_user where userCode=?",userCode);
	}
	
	/**
	 * 查找所有用户 可以使用的用户
	 * @return
	 */
	public List<User> findAllList() {
		return dao.find("select * from sys_user where delState = 'N' and state='USE'");
	}
	public User findByCode(String userCode) {
		return User.dao.findFirst("select * from sys_user where userCode=?",userCode);
	}
	
}
