package com.xiaoan.wlt.model.sys;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang3.StringUtils;

import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.jfinal.plugin.activerecord.Page;
import com.xiaoan.wlt.common.Response;
import com.xiaoan.wlt.common.WhereAndParas;
import com.xiaoan.wlt.model.base.sys.BaseFunction;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Function extends BaseFunction<Function> {
	public static final Function dao = new Function();
	private int pageNumber = 1;
	private int pageSize = 15;
	public int getPageSize() {return pageSize;}
	public void setPageSize(int pageSize) {this.pageSize = pageSize;}
	public int getPageNumber() {return pageNumber;}
	public void setPageNumber(int pageNumber) {this.pageNumber = pageNumber;}
	public Page<Function> findPageList(Function function) {
		WhereAndParas wp = getWhereAndParas(function);
		return dao.paginate(function.getPageNumber(),function.getPageSize(),"select * ","from"+ Function.TABLE + "where 1=1 " +wp.getWhere(),wp.getParas());
	}
	public static final String TABLE = " sys_function ";
	public WhereAndParas getWhereAndParas(Function function){
		StringBuffer sql = new StringBuffer();
		List<Object> list = new ArrayList<Object>();
		WhereAndParas wap = new WhereAndParas();
		if(StringUtils.isNotEmpty(function.getFuncCde())){
			sql.append(" and funcCde like ?");
			list.add("%"+function.getFuncCde()+"%");
		}
		if(function.getClevel() != null && function.getClevel() > 0){
			sql.append(" and clevel = ?");
			list.add(function.getClevel());
		}
		if(StringUtils.isNotEmpty(function.getFuncName())){
			sql.append(" and funcName like ?");
			list.add("%"+function.getFuncName()+"%");
		}
		if(StringUtils.isNotEmpty(function.getLink())){
			sql.append(" and link like ?");
			list.add("%"+function.getLink()+"%");
		}
		if(StringUtils.isNotEmpty(function.getMenuType())){
			sql.append(" and menuType like ?");
			list.add("%"+function.getMenuType()+"%");
		}
		if(StringUtils.isNotEmpty(function.getPerLink())){
			sql.append(" and perLink like ?");
			list.add("%"+function.getPerLink()+"%");
		}
		if(function.getSort() != null && function.getSort() > 0){
			sql.append(" and sort = ?");
			list.add(function.getSort());
		}
		if(StringUtils.isNotEmpty(function.getState())){
			sql.append(" and state like ?");
			list.add("%"+function.getState()+"%");
		}
		if(function.getVersion() != null && function.getVersion() > 0){
			sql.append(" and version = ?");
			list.add(function.getVersion());
		}
		if(StringUtils.isNotEmpty(function.getParentCde())){
			sql.append(" and parentCde like ?");
			list.add("%"+function.getParentCde()+"%");
		}
		wap.setWhere(sql.toString());
		wap.setParas(list.toArray());
		return wap;
	}

	/*
	 * var zNodes = [
		                 {"id":1, "pId":0, "name":"test1"},
		                 {"id":11, "pId":1, "name":"test11"},
		                 {"id":12, "pId":1, "name":"test12"},
		                 {"id":111, "pId":11, "name":"test111"}
		             ];
	 */
	public Response findTreeList() {
		List<Function> list = dao.find("select * from sys_function order by clevel asc");
		JsonArray ja = new JsonArray();
		for(Function p : list){
			JsonObject jo = new JsonObject();
			jo.addProperty("id", p.getFuncCde());
			jo.addProperty("pId", p.getParentCde() == null ? "0":p.getParentCde());
			jo.addProperty("name", p.getFuncName());
			jo.addProperty("open",true);
			ja.add(jo);
		}
		return new Response("success","",ja);
	}
	/**
	 * 查出所有菜单
	 * @return
	 */
	public Response findMenuList() {
		List<Function> list = dao.find("select * from sys_function where menuType=? order by clevel asc","MENU");
		return new Response("success","",list);
	}
}
